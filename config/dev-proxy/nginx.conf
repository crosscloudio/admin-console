user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '"$request" $status';
    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    server_tokens off;

    server {
        listen 80 default_server;

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;

        location / {
            proxy_pass http://frontend:8000;
        }

        location /sockjs-node/ {
          proxy_pass http://frontend:8000;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
        }

        location /__webpack_hmr {
            proxy_pass http://frontend:8000/__webpack_hmr;

            # required for SSE
            # http://stackoverflow.com/a/13673298/2750114
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            chunked_transfer_encoding off;
            proxy_buffering off;
            proxy_cache off;
        }

        location /graphql {
            proxy_pass http://api:3030/graphql;
        }

        location /graphiql {
            proxy_pass http://api:3030/graphiql;
        }

        location /auth/ {
            proxy_pass http://api:3030;
        }

        # webdav server may be not available
        # https://tenzer.dk/nginx-with-dynamic-upstreams/
        set $webdav_endpoint http://webdav:8080;
        # Default docker resolver. `valid` is required because default ttl is 10 min
        resolver 127.0.0.11 valid=30s;
        location /webdav/ {
            proxy_pass $webdav_endpoint;
        }
    }
}
